{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetail.js","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","DUMMY_QUOTES","AllQuotes","HighlightedQuote","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","form","onSubmit","control","htmlFor","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","QuoteDetail","match","useRouteMatch","params","useParams","find","quoteId","path","exact","url","Card","card","children","LoadingSpinner","spinner","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","message","onFocus","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","type","NewQuote","quoteData","console","log","NotFound","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7439421.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3GwJq\",\"loading\":\"QuoteForm_loading__3KK84\",\"control\":\"QuoteForm_control__sz45m\",\"actions\":\"QuoteForm_actions__2tWF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__lBEzr\",\"logo\":\"MainNavigation_logo__3nl2Z\",\"nav\":\"MainNavigation_nav__jfM63\",\"active\":\"MainNavigation_active__3Q0bc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3qsQM\",\"loading\":\"NewCommentForm_loading__1Klbv\",\"control\":\"NewCommentForm_control__3f4zK\",\"actions\":\"NewCommentForm_actions__9sIrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1fIQ1\",\"sorting\":\"QuoteList_sorting__oGXyQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__kxY5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2UDlx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2qJBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1nj-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1h5iL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2wkXq\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1;\r\n    } else {\r\n      return quoteA.id < quoteB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const isSortingAscending = queryParams.get('sort') === 'asc';\r\n\r\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\r\n\r\n  //here we also use current location.pathname instead of the hard coded '/quotes?sort=' url in history hook \r\n  //in this url we also use dynnamic injection ${} so that the parameters are recognized\r\n  const changeSortingHandler = () => {\r\n    history.push({\r\n      pathname: location.pathname,\r\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.sorting}>\r\n        <button onClick={changeSortingHandler}>\r\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\r\n        </button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {sortedQuotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","import QuoteList from '../components/quotes/QuoteList';\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n  { id: 'q2', author: 'Maximilian', text: 'Learning React is great!' },\r\n];\r\n\r\nconst AllQuotes = () => {\r\n  return <QuoteList quotes={DUMMY_QUOTES} />\r\n};\r\n\r\nexport default AllQuotes;","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport Comments from '../components/comments/Comments';\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: 'q1', author: 'Max', text: 'Learning React is fun!' },\r\n  { id: 'q2', author: 'Maximilian', text: 'Learning React is great!' },\r\n];\r\n\r\nconst QuoteDetail = () => {\r\n  //here we use useRouteMatch hook to get router URL as an object consisting of multiple properties - path, urls, and params\r\n  //path \"/quotes/:quoteId\" - gives us the path that we defined but not the actual path with parameter\r\n  //url \"/quotes/q2\" - gives us the actual url with parameter \r\n  //with this properties we replace the path {'/quotes/${params.quoteId}/comments'} with {`${match.path}/comments`}\r\n  //in order to inject parameter dynamically we use this syntax ${}\r\n  //we also user ${match.url} to replace it in the link - '/quotes/${params.quoteId}/'\r\n  //with the help of `${match.path} and ${match.url} we don't have to adjust routes manually in every component where it is reused  \r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n\r\n  if (!quote) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  //when we use Route component it allows us to display anything inside of it if it matches its route path \r\n  //in our case we display Link \"Load Comments\" if it matches the route `/quotes/${params.quoteId}/` \r\n  //we also use the word exact to match the full path instead of just the begining of the path\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      \r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          \r\n          <Link className='btn--flat' to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n\r\n        </div>\r\n      </Route>\r\n      \r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from 'react-router-dom';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\n\r\nconst NewQuote = () => {\r\n  const history = useHistory();\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    console.log(quoteData);\r\n    \r\n    history.push('/quotes');\r\n  };\r\n\r\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n","const NotFound = () => {\n  return (\n    <div className='centered'>\n      <p>Page not found!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { NavLink } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to='/quotes' activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/new-quote' activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Route, Switch, Redirect } from 'react-router-dom';\n\nimport AllQuotes from './pages/AllQuotes';\nimport QuoteDetail from './pages/QuoteDetail';\nimport NewQuote from './pages/NewQuote';\nimport NotFound from './pages/NotFound';\nimport Layout from './components/layout/Layout';\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <Redirect to='/quotes' />\n        </Route>\n        <Route path='/quotes' exact>\n          <AllQuotes />\n        </Route>\n        <Route path='/quotes/:quoteId'>\n          <QuoteDetail />\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}