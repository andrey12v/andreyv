{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eb07482.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    \r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n  return (\r\n      <div className=\"expense-date\">\r\n          <div className=\"expense-date__month\">{month}</div>\r\n          <div className=\"expense-date__year\">{year}</div>\r\n          <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import './Card.css';\r\n\r\n//This is reusable wrapper component \r\nconst Card = (props) => {\r\n\r\n    const classes = 'card ' + props.className;\r\n\r\n  return (\r\n    <div className={classes}>{props.children}</div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  \r\n  const [title, setTitle] = useState(props.title);\r\n   \r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  \r\n  const dropDownChangeHandler = (event) => {\r\n      //console.log(event.target.value);\r\n     props.onChangeFilter(event.target.value);\r\n  };\r\n  \r\n  \r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        \r\n        <label>Filter by year</label>\r\n\r\n        <select value={props.selected} onChange = {dropDownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n\r\n","import React, { useState } from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  \r\n  let barFillHeight = '0%'; \r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  //dynamic styles are rendred in double curly braces, any styles use camel case version of the style name  such as backgrounColor \r\n  return (\r\n   <div className=\"chart-bar\">\r\n    <div className=\"chart-bar__inner\">\r\n      <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n    </div>\r\n    <div className=\"chart-bar__label\">{props.label}</div>       \r\n   </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;","import React, { useState } from \"react\";\r\n\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n\r\n  //get array of data point values only\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  //get maximum from all data point values. We use spread operator to pull values and pass them to the max function. \r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}  \r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\n\r\nconst ExpensesChart = (props) => {\r\n  \r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0},\r\n    { label: 'Feb', value: 0},\r\n    { label: 'Mar', value: 0},\r\n    { label: 'Apr', value: 0},\r\n    { label: 'May', value: 0},\r\n    { label: 'Jun', value: 0},\r\n    { label: 'Jul', value: 0},\r\n    { label: 'Aug', value: 0},\r\n    { label: 'Sep', value: 0},\r\n    { label: 'Oct', value: 0},\r\n    { label: 'Nov', value: 0},\r\n    { label: 'Dec', value: 0},\r\n  ];\r\n  \r\n  //we use IN loop if we fetch object\r\n  //we use OF loop if we use array\r\n  for(const expense of props.expenses)\r\n  {\r\n    const expenseMonth = expense.date.getMonth(); //January starts at 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return (\r\n    <Chart dataPoints={chartDataPoints} />\r\n  );\r\n\r\n};\r\n\r\n\r\nexport default ExpensesChart;\r\n","import React, {useState} from 'react';\r\nimport './Expenses.css';\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\n\r\n\r\nconst Expenses = (props) => {\r\n\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  }  \r\n\r\n  //getFullYear is reserved word\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n\r\n  //take all filter conditiouns out of one place and assign the results to the variable expensesContent\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    \r\n  const [enteredTitle, setEnteredTitle] = useState('');   \r\n  const [enteredAmount, setEnteredAmount] = useState('');  \r\n  const [enteredDate, setEnteredDate] = useState(''); \r\n\r\n  const titleChangeHandler = (event) => \r\n  {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => \r\n  {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => \r\n  {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n      event.preventDefault();\r\n      \r\n      const expenseData = {\r\n        title: enteredTitle,\r\n        amount: +enteredAmount,\r\n        date: new Date(enteredDate)\r\n      };\r\n\r\n      //we pass expenseData as argument to the onSaveExpenseData function\r\n      props.onSaveExpenseData(expenseData);\r\n\r\n      //set all states to empoty values\r\n      setEnteredTitle('');\r\n      setEnteredAmount('');\r\n      setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n        <div className='new-expense__controls'>\r\n            <div className='new-expense__control'>\r\n                <label>Title</label>\r\n                <input type='text' \r\n                    value={enteredTitle} \r\n                    onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Amount</label>\r\n                <input type='number' min=\"0.01\" step=\"0.01\" \r\n                    value={enteredAmount} \r\n                    onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Date</label>\r\n                <input type='date' min=\"2019-01-01\" \r\n                    value={enteredDate} \r\n                    onChange={dateChangeHandler}/>\r\n            </div>\r\n        </div>\r\n        \r\n        <div className='new-expense__actions'>\r\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n            <button type=\"submit\" >Add Expense</button>\r\n        </div>\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\n\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n    \r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n\r\n   const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    //console.log(expenseData);\r\n    //here by using onAddExpense function we pass our expenseData from child NewExpense component to teh parent App component\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n   const [isEditing, setIsEditing] = useState(false);\r\n    \r\n   const startEditingHandler = () => {\r\n     setIsEditing(true);\r\n   }\r\n\r\n   const stopEditingHandler = () => {\r\n     setIsEditing(false);\r\n   }\r\n\r\n  //here we pass function saveExpenseDataHandler to ExpenseForm in order to get data from child to parent component \r\n  //in other words we pass pointer (function) through onSaveExpenseData prop\r\n  return (\r\n    <div className='new-expense'>\r\n        {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;","import React, {useSate} from 'react';\nimport { useState } from 'react/cjs/react.development';\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Paper Towel',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nconst App = () => {\n\n  const[expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    //1st approach -  how state can be udoated from the values from the array by using the sread operator \n    //setExpenses([expense, ...expenses]);\n    //2nd approach - how the to update state using the previous state\n    //prevExpenses is reserved word in react\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}